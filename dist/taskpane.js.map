{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./node_modules/.store/html-loader@4.2.0/node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n//require(\"dotenv\").config();\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"setup\").onclick = setup;\n    document.getElementById(\"enable-highlighter\").onclick = enableCellHighlight;\n    document.getElementById(\"disable-highlighter\").onclick = disableCellHighlight;\n  }\n});\n\n//TODO\n//2024.4.13:To remove the handler by code.\nlet eventResult: OfficeExtension.EventHandlerResult<Excel.WorksheetSelectionChangedEventArgs>;\nlet rowCount: number;\nlet columnCount: number;\nlet workbook: Excel.Workbook;\nlet selectedSheet: Excel.Worksheet;\nasync function disableCellHighlight() {\n  await Excel.run(eventResult.context, async (context) => {\n    selectedSheet.getRange().style = Excel.BuiltInStyle.normal;\n    eventResult.remove();\n    await context.sync();\n  });\n}\nasync function enableCellHighlight() {\n  await Excel.run(async (context) => {\n    workbook = context.workbook;\n    selectedSheet = workbook.worksheets.getActiveWorksheet();\n    eventResult = selectedSheet.onSelectionChanged.add(CellHighlightHandler);\n    selectedSheet.onDeactivated.add(disableCellHighlight);\n    let usedRange = selectedSheet.getUsedRange();\n    usedRange.load(\"address,rowCount,columnCount\");\n    await context.sync();\n    // 获取行数和列数\n    rowCount = usedRange.rowCount;\n    columnCount = usedRange.columnCount;\n    console.log(`The address of the used range in the worksheet is \"${usedRange.address}\"`);\n    //console.log(`The total number of rows in the used range is ${rowCount}`);\n    //console.log(`The total number of columns in the used range is ${columnCount}`);\n  });\n}\nasync function CellHighlightHandler(event) {\n  await Excel.run(async (context) => {\n    let workbook = context.workbook;\n    let selectedSheet = workbook.worksheets.getActiveWorksheet();\n    let selection = workbook.getSelectedRange();\n    selection.load(\"rowIndex,columnIndex\");\n    await context.sync();\n    // Assuming 'rowIndex' and 'columnIndex' are the row and column index of the selected cell\n    let rowIndex = selection.rowIndex;\n    let cellAdress = event.address;\n    //console.log(`=ROW()= + ${selection.rowIndex + 1})`);\n    console.log(\"Address of current selection: \" + cellAdress);\n    let columnIndex = selection.columnIndex;\n    // Convert column index to letter\n    let colLetter = convertColumnNumberToLetters(columnIndex); // 65 is the ASCII value for 'A'\n    selectedSheet.getRange().style = Excel.BuiltInStyle.normal;\n    // Apply the style to the entire row and column\n    let displayMaxRows = Math.max(100, rowCount, rowIndex);\n    let displayMaxColumns = Math.max(100, columnCount, columnIndex);\n    let DisplayRowRange = \"A\" + (rowIndex + 1) + \":\" + convertColumnNumberToLetters(displayMaxColumns) + (rowIndex + 1);\n    selectedSheet.getRange(DisplayRowRange).style = Excel.BuiltInStyle.neutral;\n    let DisplayColumnRange = colLetter + \"1\" + \":\" + colLetter + displayMaxRows;\n    selectedSheet.getRange(DisplayColumnRange).style = Excel.BuiltInStyle.neutral;\n    console.log(\"rows to highlight: \" + DisplayColumnRange);\n    console.log(\"columns to highlight: \" + DisplayRowRange);\n  });\n}\n\nfunction convertColumnNumberToLetters(columnNumber) {\n  let temp;\n  let letters = \"\";\n  columnNumber = columnNumber + 1;\n  while (columnNumber > 0) {\n    temp = (columnNumber - 1) % 26;\n    letters = String.fromCharCode(temp + 65) + letters;\n    columnNumber = Math.floor((columnNumber - temp - 1) / 26);\n  }\n  return letters;\n}\n\nasync function addNewStyle() {\n  await Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Highlighter\");\n\n    let newStyle = styles.getItem(\"Highlighter\");\n\n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.includeFont = true;\n    newStyle.fill.color = \"green\";\n    await context.sync();\n\n    console.log(\"Successfully added a new style with Highlighter to the Home tab ribbon.\");\n  });\n}\n\nasync function setup() {\n  await Excel.run(async (context) => {\n    context.workbook.worksheets.getItemOrNullObject(\"Sample\").delete();\n    const sheet = context.workbook.worksheets.add(\"Sample\");\n\n    queueCommandsToCreateTemperatureTable(sheet);\n    queueCommandsToCreateSalesTable(sheet);\n    queueCommandsToCreateProjectTable(sheet);\n    queueCommandsToCreateProfitLossTable(sheet);\n\n    let format = sheet.getRange().format;\n    format.autofitColumns();\n    format.autofitRows();\n\n    sheet.activate();\n    applyColorScaleFormat();\n    applyPresetFormat();\n    applyDataBarFormat();\n    applyIconSetFormat();\n    applyTextFormat();\n    applyCellValueFormat();\n    applyTopBottomFormat();\n    applyCustomFormat();\n    //addNewStyle();\n    await context.sync();\n  });\n}\n\nfunction queueCommandsToCreateTemperatureTable(sheet: Excel.Worksheet) {\n  let temperatureTable = sheet.tables.add(\"A1:M1\", true);\n  temperatureTable.name = \"TemperatureTable\";\n  temperatureTable.getHeaderRowRange().values = [\n    [\"Category\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  ];\n  temperatureTable.rows.add(null, [\n    [\"Avg High\", 40, 38, 44, 45, 51, 56, 67, 72, 79, 59, 45, 41],\n    [\"Avg Low\", 34, 33, 38, 41, 45, 48, 51, 55, 54, 45, 41, 38],\n    [\"Record High\", 61, 69, 79, 83, 95, 97, 100, 101, 94, 87, 72, 66],\n    [\"Record Low\", 0, 2, 9, 24, 28, 32, 36, 39, 35, 21, 12, 4],\n  ]);\n}\n\nfunction queueCommandsToCreateSalesTable(sheet: Excel.Worksheet) {\n  let salesTable = sheet.tables.add(\"A7:E7\", true);\n  salesTable.name = \"SalesTable\";\n  salesTable.getHeaderRowRange().values = [[\"Sales Team\", \"Qtr1\", \"Qtr2\", \"Qtr3\", \"Qtr4\"]];\n  salesTable.rows.add(null, [\n    [\"Asian Team 1\", 500, 700, 654, 234],\n    [\"Asian Team 2\", 400, 323, 276, 345],\n    [\"Asian Team 3\", 1200, 876, 845, 456],\n    [\"Euro Team 1\", 600, 500, 854, 567],\n    [\"Euro Team 2\", 5001, 2232, 4763, 678],\n    [\"Euro Team 3\", 130, 776, 104, 789],\n  ]);\n}\n\nfunction queueCommandsToCreateProjectTable(sheet: Excel.Worksheet) {\n  let projectTable = sheet.tables.add(\"A15:D15\", true);\n  projectTable.name = \"ProjectTable\";\n  projectTable.getHeaderRowRange().values = [[\"Project\", \"Alpha\", \"Beta\", \"Ship\"]];\n  projectTable.rows.add(null, [\n    [\"Project 1\", \"Complete\", \"Ongoing\", \"On Schedule\"],\n    [\"Project 2\", \"Complete\", \"Complete\", \"On Schedule\"],\n    [\"Project 3\", \"Ongoing\", \"Not Started\", \"Delayed\"],\n  ]);\n}\n\nfunction queueCommandsToCreateProfitLossTable(sheet: Excel.Worksheet) {\n  let profitLossTable = sheet.tables.add(\"A20:E20\", true);\n  profitLossTable.name = \"ProfitLossTable\";\n  profitLossTable.getHeaderRowRange().values = [[\"Company\", \"2013\", \"2014\", \"2015\", \"2016\"]];\n  profitLossTable.rows.add(null, [\n    [\"Contoso\", 256.0, -55.31, 68.9, -82.13],\n    [\"Fabrikam\", 454.0, 75.29, -88.88, 781.87],\n    [\"Northwind\", -858.21, 35.33, 49.01, 112.68],\n  ]);\n  profitLossTable.getDataBodyRange().numberFormat = [[\"$#,##0.00\"]];\n}\n\nasync function applyColorScaleFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n      minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n      midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n      maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" },\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n  });\n}\n\nasync function applyPresetFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n  });\n}\n\nasync function applyDataBarFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n  });\n}\n\nasync function applyIconSetFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n          The iconSetCF.criteria array is automatically prepopulated with\n          criterion elements whose properties have been given default settings.\n          You can't write to each property of a criterion directly. Instead,\n          replace the whole criteria object.\n\n          With a \"three*\" icon set style, such as \"threeTriangles\", the third\n          element in the criteria array (criteria[2]) defines the \"top\" icon;\n          e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n          icon. The first (criteria[0]) defines the \"low\" icon, but it\n          can often be left empty as the following object shows, because every\n          cell that does not match the other two criteria always gets the low\n          icon.            \n      */\n    iconSetCF.criteria = [\n      {} as any,\n      {\n        type: Excel.ConditionalFormatIconRuleType.number,\n        operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n        formula: \"=700\",\n      },\n      {\n        type: Excel.ConditionalFormatIconRuleType.number,\n        operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n        formula: \"=1000\",\n      },\n    ];\n\n    await context.sync();\n  });\n}\n\nasync function applyTextFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n  });\n}\n\nasync function applyCellValueFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n  });\n}\n\nasync function applyTopBottomFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.topBottom);\n    conditionalFormat.topBottom.format.fill.color = \"green\";\n    conditionalFormat.topBottom.rule = { rank: 1, type: \"TopItems\" };\n\n    await context.sync();\n  });\n}\n\nasync function applyCustomFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n  });\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/.store/html-loader@4.2.0/node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <meta name=\\\"author\\\" content=\\\"Jaoson Wang\\\"/> <meta name=\\\"description\\\" content=\\\"The MDN Web Docs site\\n        provides information about Open Web technologies\\n        including HTML, CSS, and APIs for both Web sites and\\n        progressive web apps.\\\"/> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://polyfill.io/v3/polyfill.min.js?features=es6\\\"><\" + \"/script> <\" + \"script id=\\\"MathJax-script\\\" async src=\\\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> When \\\\(a \\\\ne 0\\\\), there are two solutions to \\\\(ax^2 + bx + c = 0\\\\) and they are $$x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}.$$ <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <button id=\\\"setup\\\">Setup</button> <button id=\\\"enable-highlighter\\\">Enable Highlight</button> <button id=\\\"disable-highlighter\\\">Disable Highlight</button> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","eventResult","rowCount","columnCount","workbook","selectedSheet","async","disableCellHighlight","Excel","run","context","getRange","style","BuiltInStyle","normal","remove","sync","enableCellHighlight","worksheets","getActiveWorksheet","onSelectionChanged","add","CellHighlightHandler","onDeactivated","usedRange","getUsedRange","load","console","log","address","event","selection","getSelectedRange","rowIndex","cellAdress","columnIndex","colLetter","convertColumnNumberToLetters","displayMaxRows","Math","max","DisplayRowRange","neutral","DisplayColumnRange","columnNumber","temp","letters","fromCharCode","floor","setup","getItemOrNullObject","delete","sheet","temperatureTable","tables","name","getHeaderRowRange","values","rows","queueCommandsToCreateTemperatureTable","salesTable","queueCommandsToCreateSalesTable","projectTable","queueCommandsToCreateProjectTable","profitLossTable","getDataBodyRange","numberFormat","queueCommandsToCreateProfitLossTable","format","autofitColumns","autofitRows","activate","conditionalFormat","getItem","conditionalFormats","ConditionalFormatType","colorScale","criteria","minimum","formula","type","ConditionalFormatColorCriterionType","lowestValue","color","midpoint","percent","maximum","highestValue","applyColorScaleFormat","presetCriteria","preset","font","rule","criterion","ConditionalFormatPresetCriterion","oneStdDevAboveAverage","applyPresetFormat","dataBar","barDirection","ConditionalDataBarDirection","leftToRight","applyDataBarFormat","iconSetCF","iconSet","IconSet","threeTriangles","ConditionalFormatIconRuleType","number","operator","ConditionalIconCriterionOperator","greaterThanOrEqual","applyIconSetFormat","containsText","textComparison","ConditionalTextOperator","contains","text","applyTextFormat","cellValue","formula1","applyCellValueFormat","topBottom","fill","rank","applyTopBottomFormat","custom","applyCustomFormat","Office","onReady","info","host","HostType","getElementById","display","onclick","___HTML_LOADER_IMPORT_0___","URL"],"sourceRoot":""}